# -*- coding: utf-8 -*-
"""Python_8.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11gOP_JUfDSgJK4hCHJCazgfgMlInVRbh
"""

d1={1:'one',2:'two',3:'Three',4:'Four'}
d1

d1[3]='tres'
d1

d1[5]='Five'
d1

for i in d1:
    print(i,d1[i])

d1={1:3.5,2.5:True,5+6j:'abc'}
d1

d1=dict([(1,'one'),(2,'Two'),(3,'Three'),(4,'Four')])
d1

L1=[1,2,3,4]
L2=['one','two','three','four']
d1=dict(zip(L1,L2))
d1

d1=dict(enumerate(L1,start=1))
d1

L1=[(1,'one'),(2,'Two'),(3,'Three'),(4,'Four')]
d1={x:y for x,y in L1}
d1

L1=[1,2,3,4]
L2=['one','two','three','four']
d1={x:y for x,y in zip(L1,L2)}
d1

L1=['One','Two','Three','Four']
d1={x:y for x,y in enumerate(L1,start=1)}
d1

d1={1:'one',2:'two',3:'Three',4:'Four'}
d1.keys()

for x in d1.keys():
    print(x,d1[x])

d1.items()

d1={1:'one',2:'two',3:'Three',4:'Four'}
d1[4]

d1.get(4)

d1.setdefault(3)

d1.setdefault(5,'undefined')

d1={1:'one',2:'two',3:'Three',4:'Four'}
d2={5:'Five'}
d1.update(d2)

d1

l1=[1,2,3,4]
d1=dict.fromkeys(l1,'unknown')
d1

d1={1:'one',2:'two',3:'Three',4:'Four'}
d2=d1.copy()
d2

d1={1:'one',2:'two',3:'Three',4:'Four'}
d1.pop(2)

d1

d1={1:'one',2:'two',3:'Three',4:'Four'}
d1.pop(5,'missing')

d1={1:'one',2:'two',3:'Three',4:'Four'}
d1.popitem()

d1

d1.clear()
d1

birthdays = {
        'Sachin': '03/14/2003',
        'Carl': '01/17/2001',
        'Khan': '12/10/2006',
        'Donald': '06/14/2010',
        'Rohan': '01/6/2005' }

name = input('Enter Name')

if name in birthdays:
        print('Mr./Miss {} was born on {}'.format(name, birthdays[name]))
else:
        print('Name is not found')

countries = {}

for i in range(4):
    name = input('Enter Country Name')
    if name[0].upper() not in countries:
        countries[name[0].upper()]=[name]
    else:
        countries[name[0].upper()].append(name)

print(countries)

roman = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}

number = input('Enter roman number in upper cases')

deci_num = 0

i= 0

while i < len(number):
    if i+1 < len(number) and roman[number[i]] < roman[number[i+1]]:
        deci_num += roman[number[i+1]] - roman[number[i]]
        i += 2
    else:
        deci_num += roman[number[i]]
        i += 1


print(deci_num)

